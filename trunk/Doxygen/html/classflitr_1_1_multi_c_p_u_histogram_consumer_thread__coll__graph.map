<map id="flitr::MultiCPUHistogramConsumerThread" name="flitr::MultiCPUHistogramConsumerThread">
<area shape="rect" id="node2" href="$classflitr_1_1_multi_c_p_u_histogram_consumer.html" title="{flitr::MultiCPUHistogram\lConsumer\n|&#45; ImageFormat_\l&#45; ImagesPerSlot_\l&#45; PixelStride_\l&#45; ImageStride_\l&#45; CalcMutexes_\l&#45; Histograms_\l&#45; HistogramUpdatedVect_\l|+ MultiCPUHistogramConsumer()\l+ ~MultiCPUHistogramConsumer()\l+ init()\l+ getNumPixels()\l+ getHistogram()\l+ isHistogramUpdated()\l+ calcHistogramIdentityMap()\l+ calcRefHistogramForEqualisation()\l+ calcHistogramMatchMap()\l+ calcHistogramStretchMap()\l}" alt="" coords="75,1277,312,1640"/>
<area shape="rect" id="node4" href="$classflitr_1_1_image_consumer.html" title="{flitr::ImageConsumer\n||+ ImageConsumer()\l+ ~ImageConsumer()\l+ getNumReadSlotsAvailable()\l+ getNumReadSlotsReserved()\l+ reserveReadSlot()\l+ releaseReadSlot()\l+ init()\l# setSharedImageBuffer()\l}" alt="" coords="240,1003,445,1210"/>
<area shape="rect" id="node6" href="$classflitr_1_1_image_producer.html" title="{flitr::ImageProducer\n|# ImageFormat_\l# SharedImageBuffer_\l# CreateMetadataFunction_\l|+ ImageProducer()\l+ ~ImageProducer()\l+ init()\l+ getFormat()\l+ getNumWriteSlotsAvailable()\l+ trigger()\l+ seek()\l+ getLeastNumReadSlotsAvailable()\l+ setCreateMetadataFunction()\l# releaseReadSlotCallback()\l# addConsumer()\l# reserveWriteSlot()\l# releaseWriteSlot()\l}" alt="" coords="175,5,409,333"/>
<area shape="rect" id="node8" href="$classflitr_1_1_shared_image_buffer.html" title="Class for passing images between producers and consumers." alt="" coords="345,400,580,936"/>
</map>
