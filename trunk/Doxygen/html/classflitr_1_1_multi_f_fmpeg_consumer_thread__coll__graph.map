<map id="flitr::MultiFFmpegConsumerThread" name="flitr::MultiFFmpegConsumerThread">
<area shape="rect" id="node2" href="$classflitr_1_1_multi_f_fmpeg_consumer.html" title="{flitr::MultiFFmpegConsumer\n|&#45; ImageFormat_\l&#45; ImagesPerSlot_\l&#45; Codec_\l&#45; BitRate_\l&#45; Container_\l&#45; FFmpegWriters_\l&#45; MetadataWriters_\l&#45; WritingMutex_\l&#45; Writing_\l&#45; MultiWriteStats_\l|+ MultiFFmpegConsumer()\l+ ~MultiFFmpegConsumer()\l+ setCodec()\l+ setContainer()\l+ init()\l+ openFiles()\l+ openFiles()\l+ openFiles()\l+ startWriting()\l+ stopWriting()\l+ closeFiles()\l}" alt="" coords="104,1278,291,1693"/>
<area shape="rect" id="node4" href="$classflitr_1_1_image_consumer.html" title="{flitr::ImageConsumer\n||+ ImageConsumer()\l+ ~ImageConsumer()\l+ getNumReadSlotsAvailable()\l+ getNumReadSlotsReserved()\l+ reserveReadSlot()\l+ releaseReadSlot()\l+ init()\l# setSharedImageBuffer()\l}" alt="" coords="248,1003,453,1210"/>
<area shape="rect" id="node6" href="$classflitr_1_1_image_producer.html" title="{flitr::ImageProducer\n|# ImageFormat_\l# SharedImageBuffer_\l# CreateMetadataFunction_\l|+ ImageProducer()\l+ ~ImageProducer()\l+ init()\l+ getFormat()\l+ getNumWriteSlotsAvailable()\l+ trigger()\l+ seek()\l+ getLeastNumReadSlotsAvailable()\l+ setCreateMetadataFunction()\l# releaseReadSlotCallback()\l# addConsumer()\l# reserveWriteSlot()\l# releaseWriteSlot()\l}" alt="" coords="183,5,417,333"/>
<area shape="rect" id="node8" href="$classflitr_1_1_shared_image_buffer.html" title="Class for passing images between producers and consumers." alt="" coords="353,400,588,936"/>
</map>
