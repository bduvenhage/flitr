<map id="flitr::MultiOSGConsumerMetadataCreator" name="flitr::MultiOSGConsumerMetadataCreator">
<area shape="rect" id="node2" href="$classflitr_1_1_t_multi_o_s_g_consumer.html" title="{flitr::TMultiOSGConsumer\&lt; T \&gt;\n|&#45; ImageFormat_\l&#45; ImagesPerSlot_\l&#45; ImagesInHistory_\l&#45; HistoryWritePos_\l&#45; OSGImages_\l&#45; Metadata_\l&#45; OutputTextures_\l&#45; DummyImages_\l&#45; BufferMutex_\l&#45; DiscardThread_\l|+ TMultiOSGConsumer()\l+ ~TMultiOSGConsumer()\l+ init()\l+ startDiscardThread()\l+ getImageMetadata()\l+ getOSGImage()\l+ getOutputTexture()\l+ getNext()\l}" alt="" coords="12,1261,217,1624"/>
<area shape="rect" id="node4" href="$classflitr_1_1_image_consumer.html" title="{flitr::ImageConsumer\n||+ ImageConsumer()\l+ ~ImageConsumer()\l+ getNumReadSlotsAvailable()\l+ getNumReadSlotsReserved()\l+ reserveReadSlot()\l+ releaseReadSlot()\l+ init()\l# setSharedImageBuffer()\l}" alt="" coords="12,1003,217,1210"/>
<area shape="rect" id="node6" href="$classflitr_1_1_image_producer.html" title="{flitr::ImageProducer\n|# ImageFormat_\l# SharedImageBuffer_\l# CreateMetadataFunction_\l|+ ImageProducer()\l+ ~ImageProducer()\l+ init()\l+ getFormat()\l+ getNumWriteSlotsAvailable()\l+ trigger()\l+ seek()\l+ getLeastNumReadSlotsAvailable()\l+ setCreateMetadataFunction()\l# releaseReadSlotCallback()\l# addConsumer()\l# reserveWriteSlot()\l# releaseWriteSlot()\l}" alt="" coords="47,5,281,333"/>
<area shape="rect" id="node8" href="$classflitr_1_1_shared_image_buffer.html" title="Class for passing images between producers and consumers." alt="" coords="217,400,452,936"/>
</map>
